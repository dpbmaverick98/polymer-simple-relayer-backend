{
  "chains": {
    "baseSepolia": {
      "chainId": 84532,
      "rpc": "${BASE_SEPOLIA_RPC:https://sepolia.base.org}",
      "privateKey": "${PRIVATE_KEY}",
      "pollingInterval": 2000,
      "blockConfirmations": 1,
      "gasMultiplier": 1.1
    },
    "arbitrumSepolia": {
      "chainId": 421614,
      "rpc": "${ARBITRUM_SEPOLIA_RPC:https://arb-sepolia.g.alchemy.com/v2/Jtbf7OFzzUjJb8RTdJ9tfHJ_F90hiGew}",
      "privateKey": "${PRIVATE_KEY}",
      "pollingInterval": 1000,
      "blockConfirmations": 1,
      "gasMultiplier": 1.0
    }
  },
  
  "contracts": {
    "StateSyncV2": {
      "baseSepolia": {
        "address": "0xdda9a457771534eDba705E1D79B1ed0f732d642E",
        "type": "both",
        "abi": "./abis/StateSyncV2.json"
      },
      "arbitrumSepolia": {
        "address": "0x324670730736B72A3EA73067F30c54F03B23934E",
        "type": "both",
        "abi": "./abis/StateSyncV2.json"
      }
    }
  },

  "eventMappings": [
    {
      "name": "ValueSetCrossChain",
      "sourceEvent": {
        "contractName": "StateSyncV2",
        "eventName": "ValueSet",
        "eventSignature": "ValueSet(address indexed sender, string key, bytes value, uint256 nonce, bytes32 indexed hashedKey, uint256 version)"
      },
      "destinationCall": {
        "contractName": "StateSyncV2",
        "methodName": "setValueFromSource",
        "methodSignature": "setValueFromSource(string key, bytes value, bytes proof)"
      },
      "destinationResolver": "baseToArbitrum",
      "proofRequired": true,
      "enabled": true
    }
  ],

  "destinationResolvers": {
    "baseToArbitrum": {
      "type": "static",
      "destinations": ["arbitrumSepolia"]
    },
    
    "arbitrumToBase": {
      "type": "static",
      "destinations": ["baseSepolia"]
    },
    
    "chainIdFromEvent": {
      "type": "eventParameter",
      "parameterName": "destinationChainId",
      "mapping": {
        "84532": "baseSepolia",
        "421614": "arbitrumSepolia"
      }
    }
  },

  "proofApi": {
    "baseUrl": "https://proof.testnet.polymer.zone",
    "timeout": 30000,
    "retryAttempts": 3,
    "apiKey": "${POLYMER_API_KEY}"
  },
  
  "database": {
    "path": "./relayer.db"
  },
  
  "logging": {
    "level": "info",
    "enableFileLogging": true,
    "logPath": "./logs"
  }
} 